/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
      ListNode* t1=l1;
      ListNode* t2=l2;
        int c=0;
        ListNode* ans=new ListNode(-1);
        ListNode* t=ans;
        while(t1!=NULL && t2!=NULL)
        {
            int p=t1->val+t2->val+c;
            if(p>9)
            {
                c=1;
                p=p%10;
            }
            else
            {
                c=0;
            }
            ListNode* n=new ListNode(p);
            t->next=n;
            t=t->next;
            t1=t1->next;
            t2=t2->next;
        }
        while(t2!=NULL)
        {
            int p=t2->val+c;
            if(p>9)
            {
                c=1;
                p=p%10;
            }
            else
            {
                c=0;
            }
            ListNode* n=new ListNode(p);
            t->next=n;
            t=t->next;
          
            t2=t2->next;
        }
         while(t1!=NULL)
        {
            int p=t1->val+c;
            if(p>9)
            {
                c=1;
                p=p%10;
            }
            else
            {
                c=0;
            }
            ListNode* n=new ListNode(p);
            t->next=n;
            t=t->next;
          
            t1=t1->next;
        }
        if(c==1)
        {
             ListNode* n=new ListNode(1);
            t->next=n;
        }
        return ans->next;
    }
};
